.z-depth-1 {
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);
}
.z-depth-1-half {
  box-shadow: 0 5px 11px 0 rgba(0, 0, 0, 0.18), 0 4px 15px 0 rgba(0, 0, 0, 0.15);
}
.z-depth-2 {
  box-shadow: 0 8px 17px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}
.z-depth-3 {
  box-shadow: 0 12px 15px 0 rgba(0, 0, 0, 0.24), 0 17px 50px 0 rgba(0, 0, 0, 0.19);
}
.z-depth-4 {
  box-shadow: 0 16px 28px 0 rgba(0, 0, 0, 0.22), 0 25px 55px 0 rgba(0, 0, 0, 0.21);
}
.z-depth-5 {
  box-shadow: 0 27px 24px 0 rgba(0, 0, 0, 0.2), 0 40px 77px 0 rgba(0, 0, 0, 0.22);
}
body {
  background-color: #f5f5f5;
}
h1,
h2,
h3 {
  font-weight: 300;
}
.section-heading-underline {
  text-align: center;
  text-transform: uppercase;
  font-weight: 500;
}
.section-heading-underline:after {
  content: "";
  height: 3px;
  width: 100px;
  margin: 0.8em auto 0 auto;
  display: block;
  background: #eff0f3;
}
lesshat-selector {
  -lh-property: 0; } 
@-webkit-keyframes slideInDown{ 0% {-webkit-transform: translateY(-100%); visibility: visible; } 100% {-webkit-transform: translateY(0); }}
@keyframes slideInDown{ 0% {-webkit-transform: translateY(-100%);transform: translateY(-100%); visibility: visible; } 100% {-webkit-transform: translateY(0);transform: translateY(0); };
}
lesshat-selector {
  -lh-property: 0; } 
@-webkit-keyframes fadeInUp{ 0% {opacity: 0; -webkit-transform: translate3d(0, 50%, 0); } 100% {opacity: 1; -webkit-transform: none; }}
@keyframes fadeInUp{ 0% {opacity: 0;-webkit-transform: translate3d(0, 50%, 0);transform: translate3d(0, 50%, 0); } 100% {opacity: 1;-webkit-transform: none;transform: none; };
}
lesshat-selector {
  -lh-property: 0; } 
@-webkit-keyframes fadeInLeft{ 0% {opacity: 0; -webkit-transform: translate3d(-50%, 0, 0); } 100% {opacity: 1; -webkit-transform: none; }}
@keyframes fadeInLeft{ 0% {opacity: 0;-webkit-transform: translate3d(-50%, 0, 0);transform: translate3d(-50%, 0, 0); } 100% {opacity: 1;-webkit-transform: none;transform: none; };
}
lesshat-selector {
  -lh-property: 0; } 
@-webkit-keyframes fadeInRight{ 0% {opacity: 0; -webkit-transform: translate3d(50%, 0, 0); } 100% {opacity: 1; -webkit-transform: none; }}
@keyframes fadeInRight{ 0% {opacity: 0;-webkit-transform: translate3d(50%, 0, 0);transform: translate3d(50%, 0, 0); } 100% {opacity: 1;-webkit-transform: none;transform: none; };
}
.slideInDown {
  -webkit-animation-name: slideInDown;
          animation-name: slideInDown;
}
.fadeInUp {
  -webkit-animation-name: fadeInUp;
          animation-name: fadeInUp;
}
.fadeInLeft {
  -webkit-animation-name: fadeInLeft;
          animation-name: fadeInLeft;
}
.fadeInRight {
  -webkit-animation-name: fadeInRight;
          animation-name: fadeInRight;
}
.animated {
  -webkit-animation-duration: .6s;
          animation-duration: .6s;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
}
.animated.infinite {
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
}
.animated.hinge {
  -webkit-animation-duration: 2s;
          animation-duration: 2s;
}
.btn.btn-raised,
.btn-group.btn-raised {
  text-transform: uppercase;
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);
  -webkit-transition: 0.25s ease-out;
          transition: 0.25s ease-out;
}
.btn.btn-raised:hover,
.btn-group.btn-raised:hover,
.btn.btn-raised:focus,
.btn-group.btn-raised:focus,
.btn.btn-raised:active,
.btn-group.btn-raised:active {
  outline: none;
}
.btn.btn-raised:disabled,
.btn-group.btn-raised:disabled,
.btn.btn-raised.disabled,
.btn-group.btn-raised.disabled {
  box-shadow: none;
}
.btn.btn-raised:hover,
.btn-group.btn-raised:hover {
  box-shadow: 0 5px 11px 0 rgba(0, 0, 0, 0.18), 0 4px 15px 0 rgba(0, 0, 0, 0.15);
}
.btn.btn-floating,
.btn-group.btn-floating {
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);
  -webkit-transition: .25s;
          transition: .25s;
}
.btn.btn-floating:hover,
.btn-group.btn-floating:hover,
.btn.btn-floating:focus,
.btn-group.btn-floating:focus,
.btn.btn-floating:active,
.btn-group.btn-floating:active {
  outline: none;
}
.btn.btn-floating:disabled,
.btn-group.btn-floating:disabled,
.btn.btn-floating.disabled,
.btn-group.btn-floating.disabled {
  box-shadow: none;
}
.btn.btn-floating:hover,
.btn-group.btn-floating:hover {
  box-shadow: 0 5px 11px 0 rgba(0, 0, 0, 0.18), 0 4px 15px 0 rgba(0, 0, 0, 0.15);
}
.btn.btn-raised.btn-primary:hover,
.btn-group.btn-raised.btn-primary:hover,
.btn.btn-floating.btn-primary:hover,
.btn-group.btn-floating.btn-primary:hover,
.btn.btn-raised.btn-primary:focus,
.btn-group.btn-raised.btn-primary:focus,
.btn.btn-floating.btn-primary:focus,
.btn-group.btn-floating.btn-primary:focus,
.btn.btn-raised.btn-primary.focus,
.btn-group.btn-raised.btn-primary.focus,
.btn.btn-floating.btn-primary.focus,
.btn-group.btn-floating.btn-primary.focus,
.btn.btn-raised.btn-primary:active,
.btn-group.btn-raised.btn-primary:active,
.btn.btn-floating.btn-primary:active,
.btn-group.btn-floating.btn-primary:active,
.btn.btn-raised.btn-primary.active,
.btn-group.btn-raised.btn-primary.active,
.btn.btn-floating.btn-primary.active,
.btn-group.btn-floating.btn-primary.active,
.open > .btn.btn-raised.btn-primary.dropdown-toggle,
.open > .btn-group.btn-raised.btn-primary.dropdown-toggle,
.open > .btn.btn-floating.btn-primary.dropdown-toggle,
.open > .btn-group.btn-floating.btn-primary.dropdown-toggle {
  background-color: #007d71;
  border-color: #007d71;
}
.btn.btn-raised.btn-info:hover,
.btn-group.btn-raised.btn-info:hover,
.btn.btn-floating.btn-info:hover,
.btn-group.btn-floating.btn-info:hover,
.btn.btn-raised.btn-info:focus,
.btn-group.btn-raised.btn-info:focus,
.btn.btn-floating.btn-info:focus,
.btn-group.btn-floating.btn-info:focus,
.btn.btn-raised.btn-info.focus,
.btn-group.btn-raised.btn-info.focus,
.btn.btn-floating.btn-info.focus,
.btn-group.btn-floating.btn-info.focus,
.btn.btn-raised.btn-info:active,
.btn-group.btn-raised.btn-info:active,
.btn.btn-floating.btn-info:active,
.btn-group.btn-floating.btn-info:active,
.btn.btn-raised.btn-info.active,
.btn-group.btn-raised.btn-info.active,
.btn.btn-floating.btn-info.active,
.btn-group.btn-floating.btn-info.active,
.open > .btn.btn-raised.btn-info.dropdown-toggle,
.open > .btn-group.btn-raised.btn-info.dropdown-toggle,
.open > .btn.btn-floating.btn-info.dropdown-toggle,
.open > .btn-group.btn-floating.btn-info.dropdown-toggle {
  background-color: #00a5bb;
  border-color: #00a5bb;
}
.btn.btn-raised.btn-warning:hover,
.btn-group.btn-raised.btn-warning:hover,
.btn.btn-floating.btn-warning:hover,
.btn-group.btn-floating.btn-warning:hover,
.btn.btn-raised.btn-warning:focus,
.btn-group.btn-raised.btn-warning:focus,
.btn.btn-floating.btn-warning:focus,
.btn-group.btn-floating.btn-warning:focus,
.btn.btn-raised.btn-warning.focus,
.btn-group.btn-raised.btn-warning.focus,
.btn.btn-floating.btn-warning.focus,
.btn-group.btn-floating.btn-warning.focus,
.btn.btn-raised.btn-warning:active,
.btn-group.btn-raised.btn-warning:active,
.btn.btn-floating.btn-warning:active,
.btn-group.btn-floating.btn-warning:active,
.btn.btn-raised.btn-warning.active,
.btn-group.btn-raised.btn-warning.active,
.btn.btn-floating.btn-warning.active,
.btn-group.btn-floating.btn-warning.active,
.open > .btn.btn-raised.btn-warning.dropdown-toggle,
.open > .btn-group.btn-raised.btn-warning.dropdown-toggle,
.open > .btn.btn-floating.btn-warning.dropdown-toggle,
.open > .btn-group.btn-floating.btn-warning.dropdown-toggle {
  background-color: #fdd31c;
  border-color: #fdd31c;
}
.btn.btn-raised.btn-danger:hover,
.btn-group.btn-raised.btn-danger:hover,
.btn.btn-floating.btn-danger:hover,
.btn-group.btn-floating.btn-danger:hover,
.btn.btn-raised.btn-danger:focus,
.btn-group.btn-raised.btn-danger:focus,
.btn.btn-floating.btn-danger:focus,
.btn-group.btn-floating.btn-danger:focus,
.btn.btn-raised.btn-danger.focus,
.btn-group.btn-raised.btn-danger.focus,
.btn.btn-floating.btn-danger.focus,
.btn-group.btn-floating.btn-danger.focus,
.btn.btn-raised.btn-danger:active,
.btn-group.btn-raised.btn-danger:active,
.btn.btn-floating.btn-danger:active,
.btn-group.btn-floating.btn-danger:active,
.btn.btn-raised.btn-danger.active,
.btn-group.btn-raised.btn-danger.active,
.btn.btn-floating.btn-danger.active,
.btn-group.btn-floating.btn-danger.active,
.open > .btn.btn-raised.btn-danger.dropdown-toggle,
.open > .btn-group.btn-raised.btn-danger.dropdown-toggle,
.open > .btn.btn-floating.btn-danger.dropdown-toggle,
.open > .btn-group.btn-floating.btn-danger.dropdown-toggle {
  background-color: #f32c1e;
  border-color: #f32c1e;
}
.btn.btn-raised.btn-default:hover,
.btn-group.btn-raised.btn-default:hover,
.btn.btn-floating.btn-default:hover,
.btn-group.btn-floating.btn-default:hover,
.btn.btn-raised.btn-default:focus,
.btn-group.btn-raised.btn-default:focus,
.btn.btn-floating.btn-default:focus,
.btn-group.btn-floating.btn-default:focus,
.btn.btn-raised.btn-default.focus,
.btn-group.btn-raised.btn-default.focus,
.btn.btn-floating.btn-default.focus,
.btn-group.btn-floating.btn-default.focus,
.btn.btn-raised.btn-default:active,
.btn-group.btn-raised.btn-default:active,
.btn.btn-floating.btn-default:active,
.btn-group.btn-floating.btn-default:active,
.btn.btn-raised.btn-default.active,
.btn-group.btn-raised.btn-default.active,
.btn.btn-floating.btn-default.active,
.btn-group.btn-floating.btn-default.active,
.open > .btn.btn-raised.btn-default.dropdown-toggle,
.open > .btn-group.btn-raised.btn-default.dropdown-toggle,
.open > .btn.btn-floating.btn-default.dropdown-toggle,
.open > .btn-group.btn-floating.btn-default.dropdown-toggle {
  background-color: #f2f2f2;
  border-color: #f2f2f2;
}
.btn-flat {
  background: none;
  color: #333333;
  border: 1px solid transparent;
  text-transform: uppercase;
  -webkit-tap-highlight-color: transparent;
  -webkit-transition: 0.25s ease-out;
          transition: 0.25s ease-out;
}
.btn-flat:hover,
.btn-flat:focus,
.btn-flat:active {
  background-color: #fafafa;
  outline: none;
  box-shadow: none;
  border-color: #fafafa;
}
.btn-flat.btn-primary {
  color: #009688;
}
.btn-flat.btn-info {
  color: #00bcd4;
}
.btn-flat.btn-warning {
  color: #fdd835;
}
.btn-flat.btn-danger {
  color: #f44336;
}
.btn-w-xs {
  min-width: 80px;
}
.btn-w-sm {
  min-width: 100px;
}
.btn-w-md {
  min-width: 135px;
}
.btn-w-lg {
  min-width: 160px;
}
.ui-wave {
  position: relative;
  overflow: hidden;
  z-index: 0;
  -webkit-transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
          transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}
.ui-wave.ui-wave-overflowed {
  overflow: visible;
}
.ui-wave .ink {
  display: block;
  position: absolute;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 100%;
  -webkit-transform: scale(0);
          transform: scale(0);
}
.ui-wave.btn-flat .ink,
.ui-wave.btn-default .ink {
  background: rgba(0, 0, 0, 0.2);
}
.wave-animate {
  -webkit-animation: ripple 0.65s linear;
          animation: ripple 0.65s linear;
}
lesshat-selector {
  -lh-property: 0; } 
@-webkit-keyframes ripple{ 100% {opacity: 0; -webkit-transform: scale(2.5); }}
@keyframes ripple{ 100% {opacity: 0;-webkit-transform: scale(2.5);transform: scale(2.5); };
}
.ui-input-group {
  position: relative;
  margin: 18px 0 12px;
}
.ui-input-group .form-control {
  background-color: transparent;
  box-shadow: none;
}
.ui-input-group .form-control:focus {
  border-color: #009688;
}
.ui-input-group > input,
.ui-input-group > textarea {
  padding-left: 0;
  padding-right: 0;
  border: none;
  border-bottom: 1px solid #cccccc;
}
.ui-input-group > input:focus,
.ui-input-group > textarea:focus {
  outline: none;
}
.ui-input-group > input:focus ~ label,
.ui-input-group > textarea:focus ~ label,
.ui-input-group > input:valid ~ label,
.ui-input-group > textarea:valid ~ label {
  top: -20px;
  left: 0;
  font-size: 12px;
}
.ui-input-group > input:valid ~ label,
.ui-input-group > textarea:valid ~ label {
  color: #999;
}
.ui-input-group > input:focus ~ label,
.ui-input-group > textarea:focus ~ label {
  color: #009688;
}
.ui-input-group > input:focus ~ .input-bar:before,
.ui-input-group > textarea:focus ~ .input-bar:before,
.ui-input-group > input:focus ~ .input-bar:after,
.ui-input-group > textarea:focus ~ .input-bar:after {
  width: 50%;
}
.ui-input-group > label {
  color: #999999;
  font-size: 14px;
  font-weight: normal;
  position: absolute;
  pointer-events: none;
  left: 0;
  top: 10px;
  -webkit-transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);
          transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);
}
.ui-input-group .input-bar {
  position: relative;
  display: block;
  width: 100%;
}
.ui-input-group .input-bar:before,
.ui-input-group .input-bar:after {
  content: '';
  height: 1px;
  width: 0;
  bottom: 1px;
  position: absolute;
  background: #009688;
  -webkit-transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);
          transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);
}
.ui-input-group .input-bar:before {
  left: 50%;
}
.ui-input-group .input-bar:after {
  right: 50%;
}
.header {
  z-index: 1;
  position: absolute;
  left: 0;
  right: 0;
  background-color: transparent;
  -webkit-transition: all 0.3s ease-in-out;
          transition: all 0.3s ease-in-out;
  padding: 0 2em;
}
.header .container {
  padding: 3em 15px;
}
.header.navbar-default {
  border: 0;
}
.header.navbar-fixed-top {
  background-color: #263237;
  position: fixed;
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);
  -webkit-animation-name: slideInDown;
          animation-name: slideInDown;
}
.header.navbar-fixed-top .container {
  padding: 1em 0;
}
.header .navbar-brand {
  padding: 5px 0;
  font-size: 20px;
  line-height: 20px;
  font-weight: 300;
  text-transform: uppercase;
  letter-spacing: .2em;
  color: #fff;
}
.header .navbar-brand:hover,
.header .navbar-brand:active,
.header .navbar-brand:focus {
  color: #f1f1f1;
}
.header .logo {
  margin-right: 20px;
  display: inline-block;
  width: 40px;
  height: 40px;
  font-size: 24px;
  line-height: 40px;
  text-align: center;
  letter-spacing: normal;
  color: #f5f5f5;
  font-weight: 100;
  background-color: #009688;
  border-radius: 50%;
}
.header .navbar-collapse {
  background-color: rgba(255, 255, 255, 0.9);
}
@media (min-width: 768px) {
  .header .navbar-collapse {
    background: none;
  }
}
@media (min-width: 768px) {
  .header .navbar-nav {
    font-size: 14px;
    line-height: 20px;
    text-transform: uppercase;
    letter-spacing: .1em;
    padding: 7px 0;
  }
  .header .navbar-nav > li {
    margin-left: 25px;
    padding: 8px 10px;
  }
  .header .navbar-nav > li.highlight {
    border: 2px solid #f1f1f1;
    border-radius: 2px;
  }
  .header .navbar-nav > li.highlight > a:hover,
  .header .navbar-nav > li.highlight > a:active,
  .header .navbar-nav > li.highlight > a:focus {
    font-weight: normal;
    color: #f1f1f1;
    border-bottom: 0;
  }
  .header .navbar-nav > li.active > a {
    font-weight: normal;
    color: #f1f1f1;
    background-color: transparent;
  }
  .header .navbar-nav > li.active > a:hover,
  .header .navbar-nav > li.active > a:active,
  .header .navbar-nav > li.active > a:focus {
    font-weight: normal;
    color: #f1f1f1;
    background-color: transparent;
  }
  .header .navbar-nav > li > a {
    padding: 0;
    color: #94979f;
    -webkit-transition: all 0.25s ease-in-out;
            transition: all 0.25s ease-in-out;
    border-bottom: 2px solid transparent;
  }
  .header .navbar-nav > li > a:hover,
  .header .navbar-nav > li > a:active,
  .header .navbar-nav > li > a:focus {
    font-weight: normal;
    color: #f1f1f1;
    background-color: transparent;
  }
}
.ip-header {
  position: fixed;
  top: 0;
  z-index: 100;
  min-height: 480px;
  width: 100%;
  height: 100%;
  background: #f1f1f1;
}
.ip-header .ip-loader {
  position: absolute;
  left: 0;
  bottom: 30%;
  width: 100%;
  opacity: 0;
  cursor: default;
  pointer-events: none;
}
.ip-header .ip-inner {
  display: block;
  margin: 0 auto;
}
.ip-header .ip-loader svg path {
  fill: none;
  stroke-width: 6;
}
.ip-header .ip-loader svg path.ip-loader-circlebg {
  stroke: #ddd;
}
.ip-header .ip-loader svg path.ip-loader-circle {
  -webkit-transition: stroke-dashoffset 0.2s;
          transition: stroke-dashoffset 0.2s;
  stroke: #009688;
}
/* Animations */
/* Initial animation of header elements */
.loading .ip-loader {
  opacity: 1;
  -webkit-animation: animInitialHeader 1s cubic-bezier(0.7, 0, 0.3, 1) both;
          animation: animInitialHeader 1s cubic-bezier(0.7, 0, 0.3, 1) both;
  -webkit-animation-delay: 0.2s;
          animation-delay: 0.2s;
}
lesshat-selector {
  -lh-property: 0; } 
@-webkit-keyframes animInitialHeader{  from {opacity: 0; -webkit-transform: translate3d(0,800px,0); }}
@keyframes animInitialHeader{  from {opacity: 0;-webkit-transform: translate3d(0,800px,0);transform: translate3d(0,800px,0); };
}
/* Header elements when loading finishes */
.loaded .ip-loader {
  opacity: 1;
}
lesshat-selector {
  -lh-property: 0; } 
@-webkit-keyframes animLoadedLogo{  to {-webkit-transform: translate3d(0,100%,0) translate3d(0,50px,0) scale3d(0.65,0.65,1); }}
@keyframes animLoadedLogo{  to {-webkit-transform: translate3d(0,100%,0) translate3d(0,50px,0) scale3d(0.65,0.65,1);transform: translate3d(0,100%,0) translate3d(0,50px,0) scale3d(0.65,0.65,1); };
}
.loaded .ip-loader {
  -webkit-animation: animLoadedLoader 0.5s cubic-bezier(0.7, 0, 0.3, 1) forwards;
          animation: animLoadedLoader 0.5s cubic-bezier(0.7, 0, 0.3, 1) forwards;
}
lesshat-selector {
  -lh-property: 0; } 
@-webkit-keyframes animLoadedLoader{  to {opacity: 0; -webkit-transform: translate3d(0,-100%,0) scale3d(0.3,0.3,1); }}
@keyframes animLoadedLoader{  to {opacity: 0;-webkit-transform: translate3d(0,-100%,0) scale3d(0.3,0.3,1);transform: translate3d(0,-100%,0) scale3d(0.3,0.3,1); };
}
/* Header animation when loading finishes */
.loaded .ip-header {
  -webkit-animation: animLoadedHeader 1s cubic-bezier(0.7, 0, 0.3, 1) forwards;
          animation: animLoadedHeader 1s cubic-bezier(0.7, 0, 0.3, 1) forwards;
}
lesshat-selector {
  -lh-property: 0; } 
@-webkit-keyframes animLoadedHeader{  to {-webkit-transform: translate3d(0,-100%,0); }}
@keyframes animLoadedHeader{  to {-webkit-transform: translate3d(0,-100%,0);transform: translate3d(0,-100%,0); };
}
/* Content animations */
.loaded .ip-main .main-content > .hero h2 {
  -webkit-animation: animLoadedContent 1s cubic-bezier(0.7, 0, 0.3, 1) both;
          animation: animLoadedContent 1s cubic-bezier(0.7, 0, 0.3, 1) both;
}
.loaded .ip-main .main-content > .hero p {
  -webkit-animation: animLoadedContent 1s cubic-bezier(0.7, 0, 0.3, 1) both;
          animation: animLoadedContent 1s cubic-bezier(0.7, 0, 0.3, 1) both;
  -webkit-animation-delay: 0.1s;
          animation-delay: 0.1s;
}
.loaded .ip-main .main-content > .hero .btn {
  -webkit-animation: animLoadedContent 1s cubic-bezier(0.7, 0, 0.3, 1) both;
          animation: animLoadedContent 1s cubic-bezier(0.7, 0, 0.3, 1) both;
  -webkit-animation-delay: 0.2s;
          animation-delay: 0.2s;
}
lesshat-selector {
  -lh-property: 0; } 
@-webkit-keyframes animLoadedContent{  from {opacity: 0; -webkit-transform: translate3d(0,200px,0); }}
@keyframes animLoadedContent{  from {opacity: 0;-webkit-transform: translate3d(0,200px,0);transform: translate3d(0,200px,0); };
}
/*==========  page  ==========*/
.main-content {
  overflow: hidden;
}
.hero {
  position: relative;
  border: 0;
  color: #fff;
  color: rgba(255, 255, 255, 0.8);
  text-align: center;
  padding: 200px 0 150px;
  background-color: #263237;
}
.hero .hero-inner {
  position: absolute;
  top: 50%;
  width: 100%;
  margin-top: -110px;
}
.hero h2 {
  font-size: 36px;
  line-height: 60px;
  margin-bottom: 32px;
}
.hero .btn-download {
  margin-bottom: 0;
  letter-spacing: 0.8px;
  font-size: 14px;
  min-width: 220px;
  padding: 1em;
  color: #f5f5f5;
  color: rgba(255, 255, 255, 0.85);
}
.hero .preview-img {
  display: block;
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
}
#hero {
  background: url('../images/2.jpg') repeat-y 0 0 fixed;
  background-size: cover;
}
.features {
  padding: 80px 0 80px;
  border-bottom: 1px solid #ddd;
}
.features > header {
  padding: 0 20px;
  margin-bottom: 60px;
}
.features header h3 {
  text-transform: uppercase;
}
.features .feature-item {
  margin-bottom: 50px;
}
.features .feature-item:after {
  content: "";
  width: 100px;
  height: 3px;
  display: inline-block;
  background: #eff0f3;
  margin-top: 2em;
}
.features .feature-item .icon-container {
  margin: auto;
  height: 74px;
  width: 74px;
  line-height: 74px;
  padding: 0;
  border-radius: 50%;
  border: 3px solid #009688;
  font-size: 35px;
  color: #009688;
}
.features .feature-item .icon-container .md {
  vertical-align: middle;
  margin-top: -8px;
}
.features .feature-item h3 {
  font-size: 20px;
  font-weight: normal;
  color: #263237;
  text-transform: uppercase;
}
.features .feature-item .desc {
  max-width: 310px;
  margin-left: auto;
  margin-right: auto;
  color: #777777;
  font-size: 1.2em;
  line-height: 1.6em;
}
.newsletter {
  position: relative;
  background-color: #263237;
  background: url('../images/photo-1423753623104.jpg') repeat-y 0 0 fixed;
  background-size: cover;
  padding: 150px 0;
  text-align: center;
  color: #eee;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.15);
}
.newsletter:before {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.3);
}
.newsletter h2 {
  position: relative;
  text-align: center;
  font-size: 36px;
  font-weight: normal;
  text-transform: uppercase;
  color: #f1f1f1;
}
.newsletter p {
  margin-bottom: 40px;
}
.newsletter form {
  padding: 0 15px;
  max-width: 450px;
  margin: 0 auto;
}
.newsletter .ui-input-group > input,
.newsletter .ui-input-group > textarea {
  border-bottom: 2px solid #cccccc;
}
.newsletter .ui-input-group > label {
  color: #cccccc;
}
.newsletter .btn {
  margin-top: 30px;
  font-size: 14px;
  min-width: 220px;
  padding: 1em;
  color: #f5f5f5;
  color: rgba(255, 255, 255, 0.85);
}
.faq {
  background-color: #f5f5f5;
  padding: 7em 2em 5em;
}
.faq li {
  list-style-type: none;
  margin-bottom: 1.6em;
  padding: 1em 3em;
}
@media (min-width: 47.5em) {
  .faq li {
    width: 49%;
    display: inline-block;
    vertical-align: top;
  }
}
.faq h4 {
  margin-bottom: .6em;
  font-size: 21px;
  line-height: 1.6em;
}
.faq .faq-a {
  font-family: Georgia, "Times New Roman", Times, serif;
  font-size: 16px;
  line-height: 1.6em;
}
.contact {
  padding: 80px 0 80px;
}
.contact h3 {
  margin-bottom: 30px;
}
.contact .contact-info {
  margin: 50px 0 0;
  font-size: 18px;
}
.contact .contact-info .md {
  margin-right: 15px;
}
.contact .contact-info li {
  margin-bottom: 15px;
}
.contact .form-horizontal {
  padding: 0 15px;
}
.footer {
  color: #7a859e;
  position: relative;
  background-color: #263237;
  padding: 50px 0;
  font-size: 12px;
}

/*# sourceMappingURL=data:application/json;base64, */